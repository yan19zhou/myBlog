    initTable: function (ele, url, data, callback, columns) {
        $(ele).bootstrapTable('destroy');
        $(ele).bootstrapTable('refresh');
        $(ele).bootstrapTable({
            method: 'POST',
            dataType: 'json',
            contentType: "application/json",
            cache: false, //是否缓存
            striped: true, //是否显示行间隔色
            sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
            url: api + url, //服务器地址
            pagination: true,
            queryParams: queryParams, // 请求条件
            silent: true,
            pageNumber: 1, //初始化加载第一页，默认第一页
            pageSize: 10, //单页记录数
            pageList: [10, 20, 50], //可供选择的每页的行数（*）
            uniqueId: "id", //每一行的唯一标识，一般为主键列
            sortable: true,
            silent: true, 
            sortOrder: "index asc",
            formatNoMatches: function () { //没有匹配的结果  
                return '无符合条件的记录';
            },
            columns: columns,
            locale: 'zh-CN', //中文支持,
            responseHandler: function (res) {
                var results = callback(res);
                if (res.data) {                    
                    if ($(ele).parents().is('.modal') == true) {
                        $('.modal').on('shown.bs.modal', function () {
                            return {
                                "rows": results,
                                "total": (res.data.totalCount == undefined ? res.data.page.totalCount : res.data.totalCount)
                            };
                        })
                    }
                    return {
                        "rows": results,
                        "total": (res.data.totalCount == undefined ? res.data.page.totalCount : res.data.totalCount)
                    };
                } else {
                    return {
                        "rows": [],
                        "total": 0
                    };
                }
                $(ele).bootstrapTable('refresh'); //刷新表格  
            }
        });


        function queryParams(params) {
            var datas = {
                pageNo: this.pageNumber,
                pageSize: this.pageSize,
                sortOrder: params.order,//排序
            sortName:params.sort//排序字段
            }
            var params = Object.assign(datas, data);
            return JSON.stringify(params);
        }
    },